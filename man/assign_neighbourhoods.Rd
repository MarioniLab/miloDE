% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign_neighbourhoods.R
\name{assign_neighbourhoods}
\alias{assign_neighbourhoods}
\title{assign_neighbourhoods}
\usage{
assign_neighbourhoods(
  x,
  reducedDim_name,
  k = 25,
  prop = 0.2,
  order = 2,
  filtering = TRUE,
  k_init = 50,
  d = 30,
  verbose = TRUE
)
}
\arguments{
\item{x}{A \code{\linkS4class{SingleCellExperiment}} object.}

\item{reducedDim_name}{Defines the assay in \code{reducedDim(x)} to use as the embedding for graph construction.}

\item{k}{Positive integer, defines how many neighbours to use for the neighbourhood assignment. Default \code{k = 25}.}

\item{prop}{Numerical, between 0 and 1, defines which fraction of cells to use as neighbourhood centres. Default \code{prop = 0.2}.}

\item{order}{In \code{c(1,2)}, defines which order of neighbours to use. Default \code{order = 2}.}

\item{filtering}{In \code{c(TRUE,FALSE)}, defines whether to refine the assignment. Default \code{filtering = TRUE}.}

\item{k_init}{Positive integer, defines how many neighbours to use for identifying anchor cells (for this step we use 1st-order kNN). Default \code{k_init = 50}.}

\item{d}{Positive integer, defines how many dimensions from \code{reducedDim(x)} to use. Default \code{d = 30}.}

\item{verbose}{Boolean specifying whether to print intermediate output messages. Default \code{verbose = TRUE}.}
}
\value{
Milo object containing cell-neighbourhood matrix in \code{nhoods(out)} slot.
}
\description{
Assign neighbourhoods to \code{SingleCellExperiment} object
}
\details{
This function assigns neighbourhoods to single-cell data. This includes assigning graph representation, selecting \sQuote{index} cells and, finally, for each index cell, assigning it along with its neighbourhoors to one neighbourhood.

Specifically, algorithm goes as follows:
\enumerate{
\item Assigning \sQuote{loose} graph (i.e. ~low k, 1st-order kNN) to select index cells for the selected \code{prop} (greatly reduces computational time to look for \sQuote{index} cells in a loose graph).
\item Reassigning graph following entered by the user \code{order} and \code{k}.
\item Assigning neighbourhoods.
\item (Optional but recommended) Refining the neighbourhood assignment (check \code{\link{filter_neighbourhoods}}).
}
}
\examples{
require(SingleCellExperiment)
n_row = 500
n_col = 100
n_latent = 5
sce = SingleCellExperiment(assays =
list(counts = floor(matrix(rnorm(n_row*n_col), ncol=n_col)) + 4))
rownames(sce) = as.factor(1:n_row)
colnames(sce) = c(1:n_col)
sce$cell = colnames(sce)
reducedDim(sce , "reduced_dim") =
matrix(rnorm(n_col*n_latent), ncol=n_latent)
out = assign_neighbourhoods(sce, reducedDim_name = "reduced_dim")
}
