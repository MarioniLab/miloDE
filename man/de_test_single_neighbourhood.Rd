% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/de_test_neighbourhoods.R
\name{de_test_single_neighbourhood}
\alias{de_test_single_neighbourhood}
\title{de_test_single_neighbourhood}
\usage{
de_test_single_neighbourhood(
  x,
  nhoods_sce,
  hood_id,
  sample_id,
  design,
  covariates,
  contrasts = NULL,
  min_n_cells_per_sample = 1,
  min_count = 3,
  run_separately = TRUE
)
}
\arguments{
\item{x}{Milo object}

\item{nhoods_sce}{Can be extracted from x as nhoods(x) prior to running the function. The reason the argument is passed by itself is to avoid calculating it every time.}

\item{hood_id}{Character specifying for which hood we should perform testing. Should be in colnames(nhoods_sce)}

\item{sample_id}{Character specifying which variable should be used as a sample/replica id. Should be in colData(x)}

\item{design}{A \code{formula} object describing the experimental design for DE testing. If contrasts == NULL (default), the last column column of model will be used for testing.}

\item{covariates}{Vector specifying all covariates that are passed into experimental design.}

\item{contrasts}{NULL or contrast specifying what conditions to test. Note that at the moment we only support one comparison, if you wish to perform several comparisons, please run \code{de_test_neighbourhoods} for each comparison separately.}

\item{min_n_cells_per_sample}{positive integer specifying the minimun number of cells per replica to be included in testing. Default = 2}

\item{min_count}{Positive integer, specifying min.count for gene selection. Default = 5}

\item{run_separately}{A boolean parameter specifying whether the function is to be run as a part of 'de_test_all_hoods'(F) or as a stand-alone run (T)}
}
\value{
data.frame object containing milo-DE results for the selected neighbourhood
}
\description{
Tests single hood for DE. Not intended to be used by itself (however possible), but rather as a part of \code{de_test_all_hoods}
}
\examples{
require(SingleCellExperiment)
require(miloR)
n_row = 500
n_col = 100
n_latent = 5
sce = SingleCellExperiment(assays = list(counts =
floor(matrix(rnorm(n_row*n_col), ncol=n_col)) + 4))
rownames(sce) = as.factor(1:n_row)
colnames(sce) = c(1:n_col)
sce$cell = colnames(sce)
sce$sample = floor(runif(n = n_col , min = 1 , max = 5))
sce$type = ifelse(sce$sample \%in\% c(1,2) , "ref" , "query")
reducedDim(sce , "reduced_dim") =
matrix(rnorm(n_col*n_latent), ncol=n_latent)
sce = assign_neighbourhoods(sce, reducedDim_name = "reduced_dim")
nhoods_sce = nhoods(sce)
de_stat = de_test_single_neighbourhood(sce , nhoods_sce = nhoods_sce,
hood_id = 1 , sample_id = "sample" ,
design = ~type, covariates = c("type"))

}
