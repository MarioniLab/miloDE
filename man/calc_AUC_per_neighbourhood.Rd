% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_AUC_per_neighbourhood.R
\name{calc_AUC_per_neighbourhood}
\alias{calc_AUC_per_neighbourhood}
\title{calc_AUC_per_neighbourhood}
\usage{
calc_AUC_per_neighbourhood(
  sce,
  genes = rownames(sce),
  sample_id = "sample",
  condition_id,
  min_n_cells_per_sample = 1,
  n_threads = 2,
  BPPARAM = NULL
)
}
\arguments{
\item{sce}{Milo object}

\item{genes}{Character vector specifying genes to be passed for the testing}

\item{sample_id}{Character specifying which variable should be used as a sample/replica id. Should be in colData(sce).}

\item{condition_id}{Character specifying which variable should be used as a condition id. Should be in colData(sce).}

\item{min_n_cells_per_sample}{Positive integer specifying the minimum number of cells per replica to be included in testing. Default = 2.}

\item{n_threads}{Positive integer specifying the number of cores to be used to calculate AUC. Higher number results in faster calculation, but its feasibility depends on the specs of your machine. Only relevant if BPPARAM = NULL.}

\item{BPPARAM}{NULL or MulticoreParam object}
}
\value{

}
\description{
Returns per neighbourhood AUC from Augur-classifier
}
\examples{
require(SingleCellExperiment)
n_row = 500
n_col = 100
n_latent = 5
sce = SingleCellExperiment(assays = list(counts = floor(matrix(rnorm(n_row*n_col), ncol=n_col)) + 4))
logcounts(sce) = floor(matrix(rnorm(n_row*n_col), ncol=n_col)) + 4
rownames(sce) = as.factor(1:n_row)
colnames(sce) = c(1:n_col)
sce$cell = colnames(sce)
sce$sample = floor(runif(n = n_col , min = 1 , max = 5))
sce$type = ifelse(sce$sample \%in\% c(1,2) , "ref" , "query")
reducedDim(sce , "reduced_dim") = matrix(rnorm(n_col*n_latent), ncol=n_latent)
sce = assign_neighbourhoods(sce, reducedDim_name = "reduced_dim")
sce = calc_AUC_per_neighbourhood(sce, sample_id = "sample" , condition_id = "type")

}
