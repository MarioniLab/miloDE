% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_AUC_per_neighbourhood.R
\name{calc_AUC_per_neighbourhood}
\alias{calc_AUC_per_neighbourhood}
\title{calc_AUC_per_neighbourhood}
\usage{
calc_AUC_per_neighbourhood(
  x,
  genes = rownames(x),
  sample_id = "sample",
  condition_id,
  conditions = NULL,
  min_n_cells_per_sample = 3,
  n_threads = 2,
  BPPARAM = NULL
)
}
\arguments{
\item{x}{A \code{\linkS4class{Milo}} object.}

\item{genes}{Character vector specifying genes to be passed for the testing. Default \code{genes = rownames(x)}.}

\item{sample_id}{Character specifying which variable should be used as a replicate ID.
Should be in \code{colnames(colData(x))}. Default \code{sample_id = "sample"}.}

\item{condition_id}{Character specifying which variable should be used as a condition ID.
Should be in \code{colnames(colData(x))}.}

\item{conditions}{In case of multiple comparative groups, character vector specifying which conditions should be tested for separation.
Default \code{conditions = NULL} that assumes that only 2 different conditions are present.}

\item{min_n_cells_per_sample}{Positive integer specifying the minimum number of cells per replica to be included in testing.
Default \code{min_n_cells_per_sample = 3}.}

\item{n_threads}{Positive integer specifying the number of cores to be used to calculate AUC.
Higher number results in faster calculation, but its feasibility depends on the specs of your machine.
Only relevant if BPPARAM = NULL. Default \code{n_threads = 2}.}

\item{BPPARAM}{NULL or \code{\link{MulticoreParam}} object. Default \code{BPPARAM = NULL} assuming no parallelisation.}
}
\value{
\code{data.frame} object, with AUC calculated for each neighbourhood.
}
\description{
Returns per neighbourhood AUC from Augur based classifier (in \code{data.frame} format).
}
\details{
\emph{Note that it is only relevant for \dQuote{simple} models (i.e. no interactions.)}.

This function calculates for each neighbourhood whether cells between 2 conditions can be separated
with Random Forest based classifiers (adapted from \code{\link[Augur]{calculate_auc}}).
Accordingly, AUCs of the classifiers represent how well we can separate 2 conditions.

We suggest that neighbourhoods with AUC > 0.5 suggest a certain degree of perturbation between 2 conditions that can further be examined
with DE testing. You also can set your own AUC threshold if desired as well as use AUCs to rank neighbourhoods.
}
\examples{
require(SingleCellExperiment)
n_row = 500
n_col = 100
n_latent = 5
sce = SingleCellExperiment(assays = list(counts =
floor(matrix(rnorm(n_row*n_col), ncol=n_col)) + 4))
logcounts(sce) = floor(matrix(rnorm(n_row*n_col), ncol=n_col)) + 4
rownames(sce) = as.factor(1:n_row)
colnames(sce) = c(1:n_col)
sce$cell = colnames(sce)
sce$sample = floor(runif(n = n_col , min = 1 , max = 5))
sce$type = ifelse(sce$sample \%in\% c(1,2) , "ref" , "query")
reducedDim(sce , "reduced_dim") = matrix(rnorm(n_col*n_latent),
ncol=n_latent)
sce = assign_neighbourhoods(sce, reducedDim_name = "reduced_dim")
sce = calc_AUC_per_neighbourhood(sce, condition_id = "type")
}
